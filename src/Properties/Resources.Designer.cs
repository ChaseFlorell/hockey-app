//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HockeyApp.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HockeyApp.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command.
        /// </summary>
        internal static string Common_Command {
            get {
                return ResourceManager.GetString("Common_Command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        internal static string Common_Description {
            get {
                return ResourceManager.GetString("Common_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ----------.
        /// </summary>
        internal static string Common_Divider {
            get {
                return ResourceManager.GetString("Common_Divider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty.
        /// </summary>
        internal static string Common_Empty {
            get {
                return ResourceManager.GetString("Common_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to       {0} [COMMAND].
        /// </summary>
        internal static string Help_CommandExample {
            get {
                return ResourceManager.GetString("Help_CommandExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show help message and exit.
        /// </summary>
        internal static string Help_Description {
            get {
                return ResourceManager.GetString("Help_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to help|h|?.
        /// </summary>
        internal static string Help_Keyword {
            get {
                return ResourceManager.GetString("Help_Keyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show help message and exit.
        /// </summary>
        internal static string Help_ModuleDescription {
            get {
                return ResourceManager.GetString("Help_ModuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	{0} {1} /?.
        /// </summary>
        internal static string Help_ModuleHelp {
            get {
                return ResourceManager.GetString("Help_ModuleHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to help.
        /// </summary>
        internal static string Help_ModuleKeyword {
            get {
                return ResourceManager.GetString("Help_ModuleKeyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	{0} {1} [OPTIONS].
        /// </summary>
        internal static string Help_ModuleUsage {
            get {
                return ResourceManager.GetString("Help_ModuleUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options:.
        /// </summary>
        internal static string Help_OptionsTitle {
            get {
                return ResourceManager.GetString("Help_OptionsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Help:.
        /// </summary>
        internal static string Help_Title {
            get {
                return ResourceManager.GetString("Help_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage:.
        /// </summary>
        internal static string Help_UsageTitle {
            get {
                return ResourceManager.GetString("Help_UsageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Begin {0}.
        /// </summary>
        internal static string Module_Begin {
            get {
                return ResourceManager.GetString("Module_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duration: {0:h&apos;h &apos;m&apos;m &apos;s&apos;s&apos;}.
        /// </summary>
        internal static string Module_Duration {
            get {
                return ResourceManager.GetString("Module_Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (required), Your Application ID.
        /// </summary>
        internal static string Upload_AppIdDescription {
            get {
                return ResourceManager.GetString("Upload_AppIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to file data of the .dSYM.zip file (iOS and OS X) or mapping.txt (Android); note that the extension has to be .dsym.zip (case-insensitive) for iOS and OS X and the file name has to be mapping.txt for Android..
        /// </summary>
        internal static string Upload_DSYMDescription {
            get {
                return ResourceManager.GetString("Upload_DSYMDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to file data of the .ipa for iOS, .app.zip for OS X, or .apk file for Android.
        /// </summary>
        internal static string Upload_IpaDescription {
            get {
                return ResourceManager.GetString("Upload_IpaDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to set version as mandatory.
        /// </summary>
        internal static string Upload_MandatoryDescription {
            get {
                return ResourceManager.GetString("Upload_MandatoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload an application to HockeyApp.
        /// </summary>
        internal static string Upload_ModuleDescription {
            get {
                return ResourceManager.GetString("Upload_ModuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to upload.
        /// </summary>
        internal static string Upload_ModuleKeyword {
            get {
                return ResourceManager.GetString("Upload_ModuleKeyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to release notes as Textile or Markdown (after 5k characters note are truncated). If multi-line release notes are needed, pass in the path to a file containing the release notes..
        /// </summary>
        internal static string Upload_NotesDescription {
            get {
                return ResourceManager.GetString("Upload_NotesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of release notes (defaults is text).\n\t&apos;0&apos; for Textile\n\t&apos;1&apos; for Markdown.
        /// </summary>
        internal static string Upload_NotesTypeDescription {
            get {
                return ResourceManager.GetString("Upload_NotesTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to notify testers (can only be set with full-access tokens):\n\t&apos;0&apos; to not notify testers\n\t&apos;1&apos; to notify all testers that can install\n\t&apos;2&apos; to notify all testers]..
        /// </summary>
        internal static string Upload_NotifyDescription {
            get {
                return ResourceManager.GetString("Upload_NotifyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sets the release type of the app.\n\t&apos;2&apos; for alpha\n\t&apos;0&apos; for beta (default)\n\t&apos;1&apos; for store\n\t&apos;3&apos; for enterprise.
        /// </summary>
        internal static string Upload_ReleaseTypeDescription {
            get {
                return ResourceManager.GetString("Upload_ReleaseTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to download status (can only be set with full-access tokens).\n\t&apos;1&apos; to not allow users to download the version\n\t&apos;2&apos; to make the version available for download.
        /// </summary>
        internal static string Upload_StatusDescription {
            get {
                return ResourceManager.GetString("Upload_StatusDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;replace&apos; or `add` a build with the same build number..
        /// </summary>
        internal static string Upload_StrategyDescription {
            get {
                return ResourceManager.GetString("Upload_StrategyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to restrict download to comma-separated list of tags..
        /// </summary>
        internal static string Upload_TagsDescription {
            get {
                return ResourceManager.GetString("Upload_TagsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to restrict download to comma-separated list of team IDs..
        /// </summary>
        internal static string Upload_TeamsDescription {
            get {
                return ResourceManager.GetString("Upload_TeamsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (required), Your HockeyApp token..
        /// </summary>
        internal static string Upload_TokenDescription {
            get {
                return ResourceManager.GetString("Upload_TokenDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploading {0}.
        /// </summary>
        internal static string Upload_Uploading {
            get {
                return ResourceManager.GetString("Upload_Uploading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to restrict download to comma-separated list of user IDs..
        /// </summary>
        internal static string Upload_UsersDescription {
            get {
                return ResourceManager.GetString("Upload_UsersDescription", resourceCulture);
            }
        }
    }
}
